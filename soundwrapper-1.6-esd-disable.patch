Index: soundwrapper.c
===================================================================
--- soundwrapper.c
+++ soundwrapper.c	2011-05-09 19:42:12.086727005 +0200
@@ -1,5 +1,4 @@
 #include <unistd.h>
-#include <esd.h>
 #include <pulse/simple.h>
 #include <alsa/asoundlib.h>
 #include <stdlib.h>
@@ -19,11 +18,6 @@
   pa_simple* (*_pa_simple_new)(const char *, const char *, pa_stream_direction_t, const char *, const char *, const pa_sample_spec *, const pa_channel_map *, const pa_buffer_attr *, int *) = NULL;
   void (*_pa_simple_free)(pa_simple *) = NULL;
 
-  void *libesd = NULL;
-  int (*_esd_open_sound)(const char *) = NULL;
-  esd_standby_mode_t (*_esd_get_standby_mode)(int) = NULL;
-  int (*_esd_close)(int) = NULL;
-
   void *libasound = NULL;
   int (*_snd_pcm_open)(snd_pcm_t **, const char *, snd_pcm_stream_t, int) = NULL;
   int (*_snd_pcm_close)(snd_pcm_t *) = NULL;
@@ -52,22 +46,5 @@
       if(execvp("aoss",argv) == 0)
 	return 0;}}
 
-  libesd=dlopen("libesd.so.0", RTLD_LAZY);
-  if (libesd){
-    _esd_open_sound=dlsym(libesd, "esd_open_sound");
-    _esd_get_standby_mode=dlsym(libesd, "esd_get_standby_mode");
-    _esd_close=dlsym(libesd,"esd_close");
-
-    /* don't wake up the beast while detecting */
-    setenv("ESD_NO_SPAWN", "1", 1);
-    if ((sock = _esd_open_sound(NULL)) >= 0){
-      if (_esd_get_standby_mode(sock) == ESM_RUNNING){
-	_esd_close(sock);
-	dlclose(libesd);
-	argv[0] = "esddsp";
-	if(execvp("esddsp",argv) == 0)
-	  return 0;}
-      _esd_close(sock);
-      dlclose(libesd);}}
 
   return execvp(argv[1],argv+1);}
